{
  "swagger": "2.0",
  "info": {
    "title": "Workout Tracker API",
    "description": "Workout and Exercise Tracker \n To create an account, go to this link (https://cse341-final-project-workout-tracker.onrender.com) to get the account to be created through OAuth. It will create an account based off of your google credentials. \n It will only use Profile First Name, Last Name, and Email. You will only need to create an account once. \n Once that is created, then return to the swagger documentation and then authorize by pressing the authorize button, Passing in the required Client ID, selecting all the options, and then following the OAuth instructions.",
    "version": "1.0.0"
  },
  "host": "cse341-final-project-workout-tracker.onrender.com",
  "basePath": "/",
  "tags": [
    {
      "name": "Users",
      "description": "User Routes"
    },
    {
      "name": "Exercises",
      "description": "Exercise Routes"
    },
    {
      "name": "Workouts",
      "description": "Workout Routes"
    },
    {
      "name": "Logs",
      "description": "Log Routes"
    },
    {
      "name": "Auth",
      "description": "Authentication Routes"
    }
  ],
  "schemes": [
    "https"
  ],
  "securityDefinitions": {
    "GoogleOAuth": {
      "type": "oauth2",
      "flow": "implicit",
      "authorizationUrl": "https://accounts.google.com/o/oauth2/auth",
      "scopes": {
        "email": "Access user email address",
        "profile": "Access user profile information"
      }
    }
  },
  "paths": {
    "/test": {
      "get": {
        "description": "",
        "responses": {
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/": {
      "get": {
        "tags": [
          "Auth"
        ],
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/auth/google": {
      "get": {
        "tags": [
          "Auth"
        ],
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/google/callback": {
      "get": {
        "tags": [
          "Auth"
        ],
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/users/": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Returns all of the Users in the Database",
        "description": "",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/exercises/": {
      "get": {
        "tags": [
          "Exercises"
        ],
        "summary": "Returns all of the Exercises",
        "description": "",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Exercises"
        ],
        "summary": "Creates a new Exercise",
        "description": "Endpoint to create a new exercise with exercise validation. Only Name and Description are required.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Name"
                },
                "description": {
                  "type": "string",
                  "example": "Description"
                },
                "muscleGroup": {
                  "type": "string",
                  "example": "Muscle Group"
                },
                "equipment": {
                  "type": "string",
                  "example": "Equipment"
                },
                "reps": {
                  "type": "number",
                  "example": 4
                },
                "weight": {
                  "type": "string",
                  "example": "Body Weight or 120 lbs"
                },
                "sets": {
                  "type": "string",
                  "example": "2-3"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Exercise created successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "412": {
            "description": "Precondition Failed"
          },
          "500": {
            "description": "Failed to create exercise"
          }
        }
      }
    },
    "/exercises/{id}": {
      "get": {
        "tags": [
          "Exercises"
        ],
        "summary": "Returns an Exercise requiring the exercise ID",
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Exercises"
        ],
        "summary": "Updates a Exercise requiring the exercise ID",
        "description": "Endpoint to update an already existing exercise with validation. Only Name and Description are required.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Name"
                },
                "description": {
                  "type": "string",
                  "example": "Description"
                },
                "muscleGroup": {
                  "type": "string",
                  "example": "Muscle Group"
                },
                "equipment": {
                  "type": "string",
                  "example": "Equipment"
                },
                "reps": {
                  "type": "number",
                  "example": 4
                },
                "weight": {
                  "type": "string",
                  "example": "Body Weight or 120 lbs"
                },
                "sets": {
                  "type": "string",
                  "example": "2-3"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Exercise created successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Failed to create exercise"
          }
        }
      },
      "delete": {
        "tags": [
          "Exercises"
        ],
        "summary": "Deletes an Exercise requiring the exercise ID",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Exercise deleted successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Failed to delete exercise"
          }
        }
      }
    },
    "/workouts/": {
      "get": {
        "tags": [
          "Workouts"
        ],
        "summary": "Returns all of the Workouts",
        "description": "",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Workouts"
        ],
        "summary": "Creates a new Workout",
        "description": "Endpoint to create a new workout with workout validation. Only Title, Description, and Exercises are required.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string",
                  "example": "Workout Title"
                },
                "description": {
                  "type": "string",
                  "example": "Description"
                },
                "muscleGroup": {
                  "type": "string",
                  "example": "Muscle Group"
                },
                "exercises": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "Exercise #1 ID"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Workout created successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "412": {
            "description": "Precondition Failed"
          },
          "500": {
            "description": "Failed to create workout"
          }
        }
      }
    },
    "/workouts/{id}": {
      "get": {
        "tags": [
          "Workouts"
        ],
        "summary": "Returns all of the Workouts requiring a workout ID",
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Workouts"
        ],
        "summary": "Updates a Workout requiring a workout ID",
        "description": "Endpoint to update an already existing workout with workout validation. Only Title, Description, and Exercises are required.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string",
                  "example": "Update Workout Title"
                },
                "description": {
                  "type": "string",
                  "example": "Update Description"
                },
                "muscleGroup": {
                  "type": "string",
                  "example": "Update Muscle Group"
                },
                "exercises": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "Update Exercise #1 ID"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Workout updated successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "412": {
            "description": "Precondition Failed"
          },
          "500": {
            "description": "Failed to update workout"
          }
        }
      },
      "delete": {
        "tags": [
          "Workouts"
        ],
        "summary": "Deletes a Workout requiring a workout ID",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Workout deleted successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Failed to delete workout"
          }
        }
      }
    },
    "/logs/": {
      "get": {
        "tags": [
          "Logs"
        ],
        "summary": "Returns all of the workout Logs",
        "description": "",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Logs"
        ],
        "summary": "Creates a new workout Log",
        "description": "Endpoint to create an already existing workout log with validation. UserID, Date, WorkoutID, and Duration are required.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "userId": {
                  "type": "string",
                  "example": "Workout Title"
                },
                "date": {
                  "type": "string",
                  "example": "Description"
                },
                "workoutId": {
                  "type": "string",
                  "example": "Workout ID"
                },
                "duration": {
                  "type": "string",
                  "example": "Duration"
                },
                "notes": {
                  "type": "string",
                  "example": "Log Notes"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Log created successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "412": {
            "description": "Precondition Failed"
          },
          "500": {
            "description": "Failed to create log"
          }
        }
      }
    },
    "/logs/{userId}": {
      "get": {
        "tags": [
          "Logs"
        ],
        "summary": "Returns a workout Log requiring a workout Log ID",
        "description": "",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/logs/{id}": {
      "put": {
        "tags": [
          "Logs"
        ],
        "summary": "Updates a workout Log requiring a workout Log ID",
        "description": "Endpoint to update an already existing workout log with validation. UserID, Date, WorkoutID, and Duration are required.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "userId": {
                  "type": "string",
                  "example": "Update Workout Title"
                },
                "date": {
                  "type": "string",
                  "example": "Update Description"
                },
                "workoutId": {
                  "type": "string",
                  "example": "Update Workout ID"
                },
                "duration": {
                  "type": "string",
                  "example": "Update Duration"
                },
                "notes": {
                  "type": "string",
                  "example": "Update Log Notes"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Log updated successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "412": {
            "description": "Precondition Failed"
          },
          "500": {
            "description": "Failed to update log"
          }
        }
      },
      "delete": {
        "tags": [
          "Logs"
        ],
        "summary": "Deletes a workout Log requiring a workout Log ID",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Log deleted successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Failed to delete log"
          }
        }
      }
    }
  },
  "security": [
    {
      "GoogleOAuth": [
        "email",
        "profile"
      ]
    }
  ]
}